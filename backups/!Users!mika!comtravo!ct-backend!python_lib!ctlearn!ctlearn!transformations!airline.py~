from brat_io import bratify_ann
import regex as re
from . base_tagger import BaseTagger, TagStatus


class AirlineTagger(BaseTagger):
    airlines = ["Air Berlin", "Easyjet", "Aeroflot", "Asiana", "Ryan (air)?", "Eurowings",
                "Germanwings", "Lufthansa", "Wizzair", "Turkish (Airline(s)?)?",
                "AirBaltic", "(Air)? Astana", "Cathay", "Qatar (Airways)?", "Finnair",
                "Scandinavian (Airlines)?", "British (Airways)?", "Czech (Airlines)?",
                "Luxair", "Vierjet Air", "Virgin", "China Eastern", "Dragon Air",
                "Austrian (Airlines)?", "Aer Lingus", "China Eastern (Air)?", "Pegasus"]

    def airline_to_id(airlines):
        return {airline: i for i, airline in enumerate(airlines)}

    def build_re_airline(airlines):
        # sort from longest to shortest city, first in list matches first...
        airlines = sorted(airlines, key=lambda x: -len(x))
        r_names = r'|'.join([a.replace(' ', '\s*') for a in airlines])
        r_names = r'(?P<airline_name>(?i)' + r_names + r')'
        r_names = (r'(?<=\s|\p{{P}}|\||^){names}(?=\s|\p{{P}}|\||$)').format(
            names=r_names)
        return re.compile(r_names, re.VERSION1 | re.MULTILINE)

    airline2id = airline_to_id(airlines)
    re_airlines = build_re_airline(list(airline2id.keys()))

    def tag(self, msg, result):
        matches = []
        for m in AirlineTagger.re_airlines.finditer(msg['body']):
            a = bratify_ann(msg, 'AirlineOrAlliance', m.start(), m.end(),
                            where='body', attributes={"airline": m.group("airline_name")})
            matches.append(a)
        for m in AirlineTagger.re_airlines.finditer(msg['subject']):
            a = bratify_ann(msg, 'AirlineOrAlliance', m.start(), m.end(),
                            where='subject', attributes={"airline": m.group("airline_name")})
            matches.append(a)
        result['annotations'] += matches
        return TagStatus.success
