from .. base import Transformer
from .. base import SerializableMixin
import regex as re
from brat_io import bratify_ann


class ReplyTransformer(Transformer, SerializableMixin):
    rx = re.compile(r'(^>.*(?:\n>.*)*)', re.MULTILINE)

    def __init__(self):
        super(ReplyTransformer, self).__init__(input_keys=['msg'],
                                               output_key='reply')

    def tag(self, msg):
        """Poor man's tagging of reply lines in an email message:

        Consecutive blocks of lines starting with a '>' character are one
        (part) of a reply

        :param txt: input text to tag
        :return: None of no matches are found or a list of {'match': {'start': pos, 'end': pos}}
        dicts}
        """
        for m in ReplyTransformer.rx.finditer(msg['body']):
            return bratify_ann(msg, 'Reply', m.start(0), m.end(0))

    def transform(self, *args):
        res = [None] * len(args[0])
        for idx, (msg,) in enumerate(zip(*args)):
            res[idx] = self.tag(msg)
        return res
