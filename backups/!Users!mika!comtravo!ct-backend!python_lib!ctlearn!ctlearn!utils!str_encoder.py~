class StrEncoder():
    '''Alternative to sklearn.preprocessing.LabelEncoder that can
    - handle encoding and application transparently
    - can deal with 'out of sample' strings

    Usage:

    s = StrEncoder()
    # Learn
    code = s('some hashable')
    # apply
    s.freeze()
    code = s(x)  -> 0 if x was not seen in learning, else the int code
    '''
    def __init__(self, name, frozen=False):
        self.name = name
        self.classes_ = dict()
        self.frozen = frozen
        
    def freeze(self):
        self.frozen = True
        
    def __call__(self, ys):
        def check_one(y):
            if y in self.classes_:
                return self.classes_[y]
            elif not self.frozen:
                n = len(self.classes_) + 1
                self.classes_[y] = n
                return n
            else:
                return 0
        try:
            for y in ys:
                return check_one(y)
        except:
            return check_one(ys)
            
        
