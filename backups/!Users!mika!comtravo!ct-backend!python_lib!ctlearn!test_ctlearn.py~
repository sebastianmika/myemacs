import json
from ctlearn.pipelines.nlp import NLPPipeline
from ctlearn.utils.dask_trace import Track

# import bz2
# data = json.loads(bz2.BZ2File(
#       '/Users/mika/comtravo/ct-nlp-data/annotated_corpus_2017-02-06T10:48:31Z.json.bz2',
#       'rb').read().decode())
# data = [{'y_content': list(set([t['type'] for t in d['ann']['events']])),
#          'y_confidence': 1 if [t['type'].replace('Return', '') for t in d['ann']['events']]
#          == ['Flight'] else -1,
#          'y_is_booking': d['ann']['label'],
#          'y_label': [{'start': t['start'],
#                       'length': t['length'],
#                       'label': t['label'],
#                       'where': t['where']} 
#                      for t in d['ann']['annotations']
#                      if 'Flight' in t['label']],
#          'msg': d['msg']} for d in data]
# json.dump(data, open('test_msg.json', 'w'))

data = json.load(open('test_msg.json', 'r'))

N = 2500

pipe = NLPPipeline()
from dask.distributed import Client
pipe.get_fun = c.get
pipe = pipe.fit({'is_booking': [d['y_is_booking'] for d in data[:N]],
                 'label': [d['y_label'] for d in data[:N]],
                 'confidence': [d['y_confidence'] for d in data[:N]],
                 'content': [d['y_content'] for d in data[:N]]},
                [d['msg'] for d in data[:N]],
                plot_dsk='pipe_fit_dsk.png')

pred = pipe.transform([d['msg'] for d in data[N:]])
