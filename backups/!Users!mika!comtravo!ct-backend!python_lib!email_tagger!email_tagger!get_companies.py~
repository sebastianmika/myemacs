from . helpers import _query_elasticsearch


def get_companies(msg):
    # Get unique email adresses in from, to and cc which are not related to comtravo
    emails = {e: 1 for e in [msg['from']['email']] +\
              [c['email'] for c in msg['cc'] if 'comtravo.' not in c['email']] +\
              [t['email'] for t in msg['to'] if 'comtravo.' not in t['email']]}.keys()
    query = {
        'query': {
            'bool': {  # Match either in booker.email or booking_items.traveler.email
                'should': [
                    {
                        'bool': 
                        {
                            'should': [  # Match two terms: user and
                                         # domain (they are split in
                                         # the field by elasticsearch)
                                {'terms': {'booker.email': e.split('@')}} for e in emails
                            ]
                        }
                    },
                    {
                        'bool': 
                        {
                            'should': [  # Same: match user and domain separately
                                {'terms': {'booking_items.traveler.email': e.split('@')}} for e in emails
                            ]
                        }
                    }
                ]
            }
        },
        'size': 0,  # We do not need the actual documents...
        'aggs': {  # ...but just aggregations over different company_id's
            'number_companies': {
                'cardinality': {  # For "fun": get the count of distinct values
                    'field': 'company_id'
                }
            },
            'unique_companies': {
                'terms': {  # Get all matching company_id's
                    'field': 'company_id'
                }
            }
        }
    }
    companies = _query_elasticsearch(query)
    if companies is None:
        return []
    return [k['key'] for k in companies['aggregations']['unique_companies']['buckets']]



    

    
