es_booker = """{
   "query": {
       "bool": {
           "must": [
                {"match": {"booker.email": "alina.drabovych"}},
                {"match": {"booker.email": "bryanston.ch"}}
               ]
        }
   },
   "_source": {"include": "booker.*", "exclude": ["*.contact", "*._*"] },
   "sort": [
        { "meta_data.updated_at": {"order": "desc"}}
    ],
    "size": 1
}"""


# This will not only return ralph.nowak as traveler when there are
# multiple travelers in the same booking (as the selection is on
# document level)
es_traveler = """{
   "query": {
       "bool": {
           "must": [
                {"match": {"booking_items.traveler.email": "ralph.nowak"}},
                {"match": {"booking_items.traveler.email": "bryanston.ch"}}
               ]
        }
   },
   "_source": {"include": "booking_items.traveler.*", "exclude": ["*.contact", "*._*"] },
   "sort": [
        { "meta_data.updated_at": {"order": "desc"}}
    ],
    "size": 1
}"""


def tag_persons(msg):
    """Given a msg dict with 'body', 'from' and 'to[]' (where each email
    itself is a dict with 'name' and 'email'), query the BI backend
    and tag all entities that are potentially known persons.

    """
    pass
