from email_tagger.tag_mail import tag_mail
from unittest import TestCase
from unittest.mock import patch


class TestTagMail(TestCase):
    @patch('email_tagger.tag_mail._query_corenlp')
    @patch('email_tagger.tag_time._query_duckling')
    @patch('email_tagger.tag_persons.get_companies')
    @patch('email_tagger.tag_persons.get_persons')
    def test_tag_mail(self, persons_mock, company_mock, time_mock, corenlp_mock):
        company_mock.return_value = {
            'companies': {},
            'users': {
                1: {
                    'first_name': 'Louisa',
                    'last_name': 'Wörle',
                    'gender': 'f',
                    'msg_roles': []
                }
            }
        }
        time_mock.return_value = {'result': [], 'status': 200}
        corenlp_mock.return_value = {'result': ['hello this is corenlp'], 'status': 200}
        msg = {
            "thread_id": "14f85c425e51721a",
            "from": {
                "hash": "e182adaab454a9c0bc0e1bd91b209f97",
                "name": "Louisa Wörle",
                "email": "louisa@idealab.io"
            },
            "message_id": "14f85c425e51721a",
            "in-reply-to": [],
            "date": 1441058265000,
            "body": "Hi Comtravo-Team,\n\nkönnt ihr mir\n\nVielen Dank im Voraus! \n\nLouisa Wörle",
            "subject": "Flight Suggestion IdeaLab! ",
            "to": [
                {
                    "hash": "61a1739d62cbc89575d135e108e590f3",
                    "name": "",
                    "email": "buchung@comtravo.com"
                }
            ],
            "references": [],
            "cc": []
        }
        res = {'annotations': [{'attributes': {},
                                # 'id': '2d5399cf-ec0a-4080-a0f2-450fe0031d84',
                   'spans': [{'end': 17, 'start': 0}],
                   'text': 'Hi Comtravo-Team,',
                   'type': 'Greeting',
                   'where': 'body'},
                  {'attributes': {},
                   # 'id': '3cbf20ae-207e-4ba6-8172-1c22f31f3a77',
                   'spans': [{'end': 56, 'start': 34}, {'end': 71, 'start': 59}],
                   'text': 'Vielen Dank im Voraus! Louisa Wörle',
                   'type': 'EndOfMsg',
                   'where': 'body'}],
               'corenlp': {'body': {'result': ['hello this is corenlp'], 'status': 200},
                           'subject': {'result': ['hello this is corenlp'], 'status': 200}},
               'crm': {'companies': {},
                       'users': {1: {'first_name': 'Louisa',
                                     'gender': 'f',
                                     'last_name': 'Wörle',
                                     'msg_roles': ['body']}}},
               'label': None,
               'language': 'de',
               # 'p_booking': 0.9982996084109852,
               'source': 'email'}
        pred = tag_mail(msg)
        self.assertGreaterEqual(pred['p_booking'], 0.9)
        pred.pop('p_booking')
        for a in pred['annotation']:
            a.pop('id')
        self.assertEquals(tag_mail(msg), res)
