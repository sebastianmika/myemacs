import requests
import logging
import os
import json
from datetime import datetime, timedelta


logger = logging.getLogger(__name__)


_last_updated = None
_google_keys = None
_test_keys = None
_update_period = timedelta(hours=12)


def get_google_keys():
    global _last_updated, _google_keys
    if (_last_updated is None) or (_last_updated + _update_period < datetime.now()):
        ans = requests.get('https://www.googleapis.com/identitytoolkit/v3/relyingparty/publicKeys',
                           headers={'Content-Type': 'application/json'})
        if ans.status_code != 200:
            logger.warning('failed to updated google keys')
            return
        else:
            _google_keys = ans.json()
            _last_updated = datetime.now()
            logger.info('updates google keys')
    return _google_keys


def get_test_keys():
    global _test_keys
    if _test_keys is None:
        path = os.path.dirname(os.path.abspath(__file__))
        _test_keys = json.load(open(os.path.join(
            path,
            '../../../nodejs_lib/passport_google_identity_toolkit/testPublicKeys.json'), 'r'))
    return _test_keys


def is_test_or_debug():
    return os.environ.get('DEBUG', False) or os.environ.get('TEST', False)
    

def get_public_keys():
    if is_test_or_debug():
        return get_test_keys()
    else:
        return get_google_keys()


