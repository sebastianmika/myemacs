from unittest import TestCase
from unittest.mock import patch
import os
from jwt_auth.get_keys import x509_to_pub, get_google_keys, get_pre_shared_key


class GetRes:
    def __init__(self, status, json):
        self.status_code = status
        self.json_data = json

    def json(self):
        return self.json_data


_test_cert = ("-----BEGIN CERTIFICATE-----\n"
              "MIIDHDCCAgSgAwIBAgIEPDuSazANBgkqhkiG9w0BAQsFADAzMQ8wDQYDVQQDEwZH\n"
              "aXRraXQxEzARBgNVBAoTCkdvb2dsZSBJbmMxCzAJBgNVBAYTAlVTMB4XDTE2MDQw\n"
              "NzIyMDE1NVoXDTE3MDQwMjIyMDE1NVowMzEPMA0GA1UEAxMGR2l0a2l0MRMwEQYD\n"
              "VQQKEwpHb29nbGUgSW5jMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQAD\n"
              "ggEPADCCAQoCggEBALLHjOrhFrV9LJnMJht9obAYtu/oWZq3lx/yxOfYaSwCZmhZ\n"
              "mOyAJzYBgxCEkaAK6wpnPk0VAS33Uz+3QYRBIIgnQSO+xb/PBw53qLWipD8dhkGG\n"
              "WSLnAEJbNDUE83jf6nthDJTX03Dy+Y6+S03pNTTY11CPREOo5/Z+y1xQlm/paXpe\n"
              "BjC0eC4RirBeif2wJVV7fEos/tVaSGa0GpXi2RXJo/6fsSc5ntbleVtv3R6dyZm/\n"
              "1+Pl6c2HbdX+S5dIFNNwFJ+SDvSy2cb91AG156WehkDZN3ZUKIlIyLZGtIzRNIi7\n"
              "cVBJXlknZ28BOuZlYg61zLUDXC15afx6Ciwdz/kCAwEAAaM4MDYwDAYDVR0TAQH/\n"
              "BAIwADAWBgNVHSUBAf8EDDAKBggrBgEFBQcDAjAOBgNVHQ8BAf8EBAMCB4AwDQYJ\n"
              "KoZIhvcNAQELBQADggEBAJW+akK2tRGYcFWMkDZ/j7k+n28dASCRtaXK4X2qLu8m\n"
              "Tz9RE5Lr0uNMU7m8JzW9nkRtefqnk3I9d+YbLOgUryoV0dKTUD0lgbjIQFD6o6AC\n"
              "NFg/y4igLlIE28yi+uwgd3UtUM9YudXMD8qbxeqj8iCAyaVYSw0YKlQs0WxkmJ+I\n"
              "DeGCsi0glP1bCEjphqfhqEUhENRNpQnH4AJ3XpDq5fNn9UVlTzDxqUxzny9UzB/g\n"
              "l1uyRpav8HgV22cSVil23J/SQnuUxY7inyiRQIFQd4Z5z2Da6Lf1vXttgSAcigy+\n"
              "qGHLfgqL2yA3jQNwefvvpxpGvGpT5BC+thJvwLsoD5Y=\n"
              "-----END CERTIFICATE-----\n")

_test_key = ("-----BEGIN PUBLIC KEY-----\n"
             "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsseM6uEWtX0smcwmG32h\n"
             "sBi27+hZmreXH/LE59hpLAJmaFmY7IAnNgGDEISRoArrCmc+TRUBLfdTP7dBhEEg\n"
             "iCdBI77Fv88HDneotaKkPx2GQYZZIucAQls0NQTzeN/qe2EMlNfTcPL5jr5LTek1\n"
             "NNjXUI9EQ6jn9n7LXFCWb+lpel4GMLR4LhGKsF6J/bAlVXt8Siz+1VpIZrQaleLZ\n"
             "Fcmj/p+xJzme1uV5W2/dHp3Jmb/X4+XpzYdt1f5Ll0gU03AUn5IO9LLZxv3UAbXn\n"
             "pZ6GQNk3dlQoiUjItka0jNE0iLtxUEleWSdnbwE65mViDrXMtQNcLXlp/HoKLB3P\n"
             "+QIDAQAB\n"
             "-----END PUBLIC KEY-----\n")


@patch('jwt_auth.get_keys.requests.get')
class TestGetKeys(TestCase):
    def test_x509_to_pub(self, get_mock):
        self.assertIsInstance(x509_to_pub(_test_cert), str)

    def test_get_google_keys(self, get_mock):
        self.maxDiff = None
        # no key set yet and that stays the same with a failure
        get_mock.return_value = GetRes(201, None)
        self.assertEqual(get_google_keys(), None)
        # get a key from mock
        get_mock.return_value = GetRes(200, {'key': _test_cert})
        self.assertEqual(get_google_keys(), {'key': _test_key})
        # stays the same on failure
        get_mock.return_value = GetRes(201, "whatever")
        self.assertEqual(get_google_keys(), {'key': _test_key})

    def test_get_jwt_psk(self, get_mock):
        os.environ['JWT_PSK'] = 'test'
        self.assertEqual(get_pre_shared_key(), {'jwt_psk': {'strategy': 'psk', 'key': 'test'}})
