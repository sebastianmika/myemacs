import os
import requests
import logging
import json


logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)


travelers = []


def get_travelers():
    global travelers
    bi_uri = os.environ.get('COMTRAVO_BI_URI', 'http://bi')
    bi_user = os.environ.get('COMTRAVO_BI_USER')
    bi_password = os.environ.get('COMTRAVO_BI_PASSWORD')
    try:
        # Get scroll id
        r = requests.get(bi_uri + '/travelers/_search?scroll=1m&size=100',
                         headers={'Accept': 'application/json',
                                  'Content-Type': 'application/json'},
                         auth=(bi_user, bi_password),
                         verify=False)  # Self signed cert...
        if r.status_code != 200:
            logger.error('querying elasticsearch on {} failed: {}'.format(bi_uri,
                                                                          r.status_code))
            return False
        # Get results
        r = r.json()
        scroll_id = r['_scroll_id']
        travelers += r['hits']['hits']
        while True:
            # Iterate scroll until no more items are left
            r = requests.get(bi_uri + '/_search/scroll',
                             headers={'Accept': 'application/json',
                                      'Content-Type': 'application/json'},
                             data=json.dumps({'scroll': '1m',
                                              'scroll_id': scroll_id}),
                             auth=(bi_user, bi_password),
                             verify=False)  # Self signed cert...
            if r.status_code != 200:
                logger.error('querying elasticsearch on {} failed: {}'.format(bi_uri,
                                                                              r.status_code))
                return False
            r = r.json()
            scroll_id = r['_scroll_id']
            if len(r['hits']['hits']) == 0:
                break
            travelers += r['hits']['hits']
    except requests.exceptions.ConnectionError as e:
        logger.error("could not connect to elasticsearch: {}".format(e))
    logger.info("es travelers cache refreshed")
    return True


if not get_travelers():
    raise Exception("Failure getting travelers from source")


r = requests.delete('http://localhost:9200/travelers')
if r.status_code != 200 or r.json()['acknowledge'] != True:
    raise Exception("Failure getting travelers from source")


MAPPING=`curl -X GET -H "Authorization: Basic YWxwaGFnbzpkaWVodW1hbg==" -H "Cache-Control: no-cache" "https://bi.comtravo.com/traveler\
s"`                                                                                                                                    
curl -XPOST http://localhost:9200/travelers -d $MAPPING                                                                                
                                                                                                                                         
        _es_travelers_cache = new_es_travelers_cache
