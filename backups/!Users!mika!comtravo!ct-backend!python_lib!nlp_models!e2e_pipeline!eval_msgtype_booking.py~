import numpy as np
import pandas as pd
import sklearn.metrics as metrics


def eval_msgtype_booking(raw_data, thres=0.5):
    def to_label(ann):
        if 'status' not in ann:
            if ann['p_booking'] >= thres:
                return 'booking'
            else:
                return 'other'
        elif ann['status'] == 400:
            return 'bad_request'
        elif ann['status'] == 500:
            return 'server_error'
        else:
            raise Exception("what?")

    pred_lang_ = np.array([to_pred(c['pred_ann']) for c in raw_data])
    true_lang = np.array([c['ann']['language'] for c in raw_data])
    # exclude client side errors
    idx = pred_lang_ != 'bad_request'
    pred_lang = pred_lang_[idx]
    true_lang = true_lang[idx]
    print(metrics.classification_report(true_lang, pred_lang))
    s = pd.Series(true_lang).value_counts()
    s = s[s > len(true_lang) * min_support].index
    precision = {}
    recall = {}
    f1 = {}
    for l in s:
        precision[l] = metrics.precision_score(true_lang == l, pred_lang == l)
        recall[l] = metrics.recall_score(true_lang == l, pred_lang == l)
        f1[l] = metrics.f1_score(true_lang == l, pred_lang == l)
    return {
        'language': {
            'precision': precision,
            'recall': recall,
            'f1': f1,
            'predictions': pred_lang_
        }}
