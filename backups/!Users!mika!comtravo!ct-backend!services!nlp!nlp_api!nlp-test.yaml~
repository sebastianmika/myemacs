swagger: '2.0'

info:
  version: "0.0.2"
  title: NLP API
  description: Provides an API to parse information from a message

basePath: /v1
schemes:
  - http

paths:
  /annotate:
    post:
      description: get annotations for a request (aka a zendesk ticket)
      x-swagger-router-controller: nlp_api.controllers.annotate
      operationId: post_annotate
      parameters:
        - name: requestBody
          in: body
          description: request to annotate
          schema:
            $ref: '#/definitions/zendeskTicket'
      tags:
        - NLP
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/annotationResponse'
        '401':
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/GeneralError'
  /annotate/verbose:
    post:
      description: get annotations for a request (aka a zendesk ticket)
      x-swagger-router-controller: nlp_api.controllers.annotate
      operationId: post_annotate_verbose
      parameters:
        - name: requestBody
          in: body
          description: request to annotate
          schema:
            $ref: '#/definitions/zendeskTicket'
      tags:
        - NLP
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/verboseAnnotationResponse'
        '401':
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/GeneralError'

responses:
  Unauthorized:
    description: Unauthorized operation
    schema:
      $ref: '#/definitions/errorModel'
  GeneralError:
    description: Something went wrong
    schema:
      $ref: '#/definitions/errorModel'

definitions:

  errorModel:
    type: object
    required:
      - status
      - title
      - detail
    properties:
      status:
        type: integer
        format: int32
      title:
        type: string
      detail:
        type: string

  zendeskTicket:
    type: object
    description: a zendesk ticket to annotate
    additionalProperties: true
    required:
      - body
      - subject
      - date
      - from
      - to
      - cc
      - zendesk_ticket_id
    properties:
      body:
        description: the ticket body
        type: string
      subject:
        description: the ticket subject
        type: string
      to:
        description: list of ticket recipients
        type: array
        items:
          $ref: '#/definitions/emailAddress'
        minLength: 1
      cc:
        description: list of cced ticket recipients
        type: array
        items:
          $ref: '#/definitions/emailAddress'
        minLength: 0
      from:
        description: sender of ticket
        $ref: '#/definitions/emailAddress'
      date:
        description: >
          time of ticket receipt in miliseconds
          since the UTC epoch
        type: integer
        minimum: 0
      zendesk_ticket_id:
        description: zendesk ticket id (for tracking purposes)
        type: integer


  emailAddress:
    type: object
    required:
      - email
    additionalProperties: false
    properties:
      email:
        type: string
        format: email
        description: the email address
      name:
        type: string
        description: a string with an optional human readable name

  annotationResponse:
    type: object
    description: annotations for a request
    properties:
      language:
        type: string
        description: two letter iso language code or 'unknown'
      source:
        type: string
        description: >
          channel the request was (most likely) received on;
          currently only requests on the 'email' channel are
          fully processed
        enum: ['email', 'sms']
      p_booking:
        description: probability that the request is actually a booking
        $ref: '#/definitions/probability'
      content:
        description: probability for various item types to be mentioned in the request
        $ref: '#/definitions/requestContent'
      companies:
        description: >
          array of companies that are relevant for this request
        type: array
        items:
          $ref: '#/definitions/companyAnnotation'
      persons:
        description: >
          array of persons that are mentioned in the request,
          alongside with their role and IDs in CRM
        type: array
        items:
          $ref: '#/definitions/personAnnotation'
      requests:
        $ref: '#/definitions/request'
      zendesk_ticket_id:
        description: zendesk ticket id (for tracking purposes)
        type: integer

  requestContent:
    type: object
    description: >
      probabilites for various item types to be mentioned in a request
    additionalProperties: false
    properties:
      flight:
        $ref: '#/definitions/probability'
      hotel:
        $ref: '#/definitions/probability'
      train:
        $ref: '#/definitions/probability'
      transfer:
        $ref: '#/definitions/probability'
      rental_car:
        $ref: '#/definitions/probability'
      other:
        $ref: '#/definitions/probability'

  companyAnnotation:
    description: >
      A company id from the CRM and its probability to be relevant
      for the request
    type: object
    additionalProperties: false
    required:
      - id
      - probability
    properties:
      id:
        type: string
        description: company id
      probability:
        $ref: '#/definitions/probability'

  personAnnotation:
    description: >
      A person id from the CRM, its probability to be relevant for the
      request, and its roles
    type: object
    additionalProperties: false
    required:
      - id
      - roles
    properties:
      id:
        type: string
        description: person id from CRM
      roles:
        description: array of roles the person has in the request
        type: array
        items:
          $ref: '#/definitions/personRequestRoles'

  personRequestRoles:
    type: object
    description: potential roles of a person in a request
    additionalProperties: false
    properties:
      role:
        type: string
        enum: ['booker', 'traveler']
        description: the role
      probability:
        $ref: '#/definitions/probability'

  verboseAnnotationResponse:
    type: object
    description: >
      annotations for a request in broad detail for debugging
      and development purposes

      properties are not further specified as this end-point should not be
      used by non-believers anyway and might change at any time without
      notice

  probability:
    description: >
      a probability (i.e. [0 1] floating point value)

      note that in most cases this number will
      neither be a proper probability (in the statistical
      meaning), nor will probabilities on some level add up to one
    type: number
    minimum: 0.0
    maximum: 1.0

  request:
    description: >
      predicted travel intent (only flights so far)
    type: object
    additionalProperties: false
    properties:
      flight_requests:
        description: a list of requested flights
        type: array
        items:
          $ref: '#/definitions/flightRequest'

  flightRequest:
    description: >
      travelers intent. For example, for round trips
      there are 2 slices and for one way there is one slice
    type: object
    required:
      - probability
      - travelers
      - slices
    additionalProperties: false
    properties:
      travelers:
        type: array
        items:
          $ref: '#/definitions/person'
      slices:
        type: array
        items:
          $ref: '#/definitions/flightRequestSlice'
      probability:
        $ref: '#/definitions/probability'

  flightRequestSlice:
    description: one hop on a plane
    required:
      - probability
    additionalProperties: false
    properties:
      origin:
        $ref: '#/definitions/iata_location'
      destination:
        $ref: '#/definitions/iata_location'
      departure_from:
        $ref: '#/definitions/time'
      departure_to:
        $ref: '#/definitions/time'
      arrival_from:
        $ref: '#/definitions/time'
      arrival_to:
        $ref: '#/definitions/time'
      flight_number:
        $ref: '#/definitions/flightNumber'
      operator:
        $ref: '#/definitions/operator'
      cabin_class:
        $ref: '#/definitions/cabinClass'
      cancelable:
        $ref: '#/definitions/cancelable'
      rebookable:
        $ref: '#/definitions/rebookable'
      luggage:
        $ref: '#/definitions/luggage'
      probability:
        $ref: '#/definitions/probability'

  person:
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - type: object
        required:
          - id
        properties:
          id:
            description: >
              If set, the travlers id in the CRM, else the traveler
              could not be found in the CRM (which does not imply
              that it is actually missing)
            type: string

  location:
    description: >
      A general location that has a geonames id (e.g. a city, a hotel,
      a mountain, ...); for airports use iata_location
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - type: object
        properties:
          geonames_id:
            description: >
              If set, the geonames id of the location; if missing, this does not imply
              that no geonames id could be found by other means (e.g. the annotation might
              only consider an arbitrary subset of possible ids)
            type: integer

  iata_location:
    description: >
      A location that has an iata code (e.g. airports, some train
      stations); also contains the geonames id of this location
    allOf:
      - $ref: '#/definitions/location'
      - type: object
        required:
          - iata_code
        properties:
          iata_code:
            description: The iata code of this location
            type: string
            maxLength: 3
            minLength: 3
            pattern: "^[A-Z]{3}$"

  operator:
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - type: object
        required:
          - operator
        properties:
          operator:
            type: string
            description: >
              name of an operator in common sense language
              (e.g. Lufthansa, LH, Air Berlin)

  flightNumber:
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - type: object
        description: a flight number
        required:
          - carrier_code
          - number
        properties:
          carrier_code:
            type: string
            description: Two-letter carrier code.
          number:
            type: string
            description: number of the flight

  cabinClass:
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - type: object
        description: Cabin class of the slice
        properties:
          cabin_class:
            type: string
            enum:
              - economy
              - economy plus
              - business
              - first
              - undecidable

  cancelable:
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - type: object
        description: Should the flight be cancelable?
        properties:
          cancelable:
            type: string
            enum:
              - yes
              - no
              - undecidable

  rebookable:
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - type: object
        description: Should the flight be rebookable?
        properties:
          rebookable:
            type: string
            enum:
              - yes
              - no
              - undecidable

  luggage:
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - type: object
        description: Should the flight have luggage?
        properties:
          luggage:
            type: string
            enum:
              - yes
              - no
              - undecidable

  time:
    allOf:
      - $ref: '#/definitions/textAnnotation'
      - $ref: '#/definitions/dateTime'

  textAnnotation:
    description: >
      part of the source text that has been annotated
      (might span multiple locations in the original text)
    type: object
    required:
      - probability
      - entity
      - text
      - tokens
    properties:
      text:
        description: >
          the complete text comprising the annotation (join of tokens)
        type: string
      tokens:
        description: >
          the parts of the source text that the annotation
          is composed from
        type: array
        items:
          $ref: '#/definitions/textSpan'
      entity:
        description: >
          if set, the base entity type associated with this annotation
        type: string
        enum: ["Location", "Person", "FlightNumber", "TimePoint", "TimeRange", "Option"]
      probability:
        description: probability of the annotation being correct
        $ref: '#/definitions/probability'

  textSpan:
    description: >
      consecutive part of the source text
    type: object
    required:
      - text
      - start
      - length
      - prediction
      - probability
    additionalProperties: false
    properties:
      text:
        description: the source text snipplet
        type: string
      start:
        description: start index of annotation in text (0 based)
        type: integer
        minimum: 0
      length:
        description: length of annotation in text
        type: integer
        minimum: 0
      prediction:
        description: carry through of low level prediction for this text part
        type: string
      probability:
        description: probability of the prediction
        $ref: '#/definitions/probability'

  dateTime:
    required:
      - date_value
    properties:
      date_value:
        type: string
        format: date
        description: Format of the date must be YYYY-MM-DD
      time_value:
        type: string
        pattern: ^(?:2[0-3]|[01][0-9]):[0-5][0-9]$
        description: Format of the time must be HH:mm
