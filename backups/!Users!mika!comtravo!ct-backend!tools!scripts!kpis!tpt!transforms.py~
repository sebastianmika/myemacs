import pandas as pd


def get_booking_items(booking_logs):
    return pd.DataFrame([
        {
            'ticket_id': tid,
            'id_booking': id_booking,
            'id_booking_item': id_booking_item,
            't_created': pd.to_datetime(booking_item['meta_data']['created_at']),
            'td_created': pd.to_datetime(booking_item['meta_data']['created_at']).date(),
            't_updated': pd.to_datetime(booking_item['meta_data'].get('updated_at')),
            'status': booking_item['status'],
            'type': booking_item['type'],
            'option_item_id': booking_item.get('option_item_id'),
            'rebooked': booking_item['rebooked'],
            'canceled': booking_item['canceled'],
            'rebooked_at': pd.to_datetime(booking_item.get('rebooked_at')),
            'canceled_at': pd.to_datetime(booking_item.get('canceled_at')),
        }
        for tid, booking in booking_logs.items()
        for id_booking, booking_items in booking.items()
        for id_booking_item, booking_item in booking_items.items()])


def get_offer_option_items(offer_logs):
    return pd.DataFrame([
        {'ticket_id': offer['zendesk_ticket_id'],
         'id_offer': offer['_id'],
         'status': offer['status'],
         't': pd.to_datetime(odate).date(),
         'id_offer_item': offer_item['id'],
         'id_offer_item_option': offer_item_option['id'],
         'type_offer_item_option_item': offer_item_option_item['type'],
         'id_offer_item_option_item': offer_item_option_item['{}_item'.format(
             offer_item_option_item['type'])]['id']}
        for tid, ticket_offers in offer_logs.items()
        for oid, offer_t in ticket_offers.items()
        for odate, offer in offer_t.items()
        for offer_item in offer['offer_items']
        for offer_item_option in offer_item['options']
        for offer_item_option_item in offer_item_option['option_items']])


def offers_per_ticket(offer_logs):
    return {tid: len(offers) for tid, offers in offer_logs.items()}


def offer_items_per_ticket(offer_logs):
    return {tid: sum([len(offer['offer_items']) for offer in offers.values()
                      if offer['status'] == 'processed'], 0)
            for tid, offers in offer_logs.items()}

                        
def booking_items_per_ticket(booking_logs):
    return {tid: sum([len(booking) for booking in bookings.values()], 0)
            for tid, bookings in booking_logs.items()}
