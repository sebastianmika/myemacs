import json


data = json.load(open('ct-nlp-data/annotated_corpus_2017-01-05T14:31:26Z.json', 'r'))


def target_from_args(e, key):
    for a in e['args']:
        if a['name'].startswith(key):
            yield a['target']


def get_values(anns, key, with_attr):
    val = anns.get(key, None)
    res = None
    if val:
        res = {'text': val['text']}
        if with_attr:
            res['attributes'] = val['attributes']
        if 'relates_to' in val:
            # res['related'] = res['text']
            for r in val['relates_to']:
                rel = get_values(anns, r['target'], with_attr)
                if rel:
                    res['text']Â += ' ' + r['type'] + ' ' + rel['text']
                # res['related'].append({'relation': r['type'], 'data':
                #                       get_values(anns, r['target'], with_attr)})
    return res


def get_from_args(e, anns, key, with_attr=False):
    vals = []
    for id in target_from_args(e, key):
        val = get_values(anns, id, with_attr)
        if val:
            vals.append(val)
    return vals


for d in data:
    requests = []
    ann_by_id = {a['id']: a for a in d['ann']['annotations_orig']}
    for e in d['ann']['events']:
        if e['type'] == 'Flight':
            requests.append({
                'type': 'Flight',
                'orgs': get_from_args(e, ann_by_id, 'org'),
                'dsts': get_from_args(e, ann_by_id, 'dst'),
                'fns': get_from_args(e, ann_by_id, 'fn'),
                'travelers': get_from_args(e, ann_by_id, 'who'),
                'dpt': get_from_args(e, ann_by_id, 'dpt'),
                'arv': get_from_args(e, ann_by_id, 'arv')})
        else:
            pass
    d['requests'] = requests
    if requests:
        print(requests)
